1
00:00:00,000 --> 00:00:03,981
We hit the jackpot during our data mining expedition

2
00:00:03,981 --> 00:00:10,799
but the gold we found was not without impurities 

3
00:00:10,799 --> 00:00:17,000
The accuracy of our data

4
00:00:17,104 --> 00:00:20,962
relies heavily on how well we refine it.

5
00:00:20,962 --> 00:00:23,001
The more we clean and polish our data, 

6
00:00:23,896 --> 00:00:26,890
the greater the level of accuracy we can achieve. 

7
00:00:26,890 --> 00:00:31,784
And with that, we step into our data cleaning operation.


8
00:00:31,784 --> 00:00:36,828
The impurities in the data include:

9
00:00:36,828 --> 00:00:40,822
Familiar data being Alien

10
00:00:40,822 --> 00:00:45,363
Data that violated regulations

11
00:00:45,363 --> 00:00:48,750
Islandic data

12
00:00:48,750 --> 00:00:52,033
Conflicting data

13
00:00:52,033 --> 00:00:56,778
And Threatening scope creep

14
00:00:56,778 --> 00:01:01,062
To kick things off, 

15
00:01:01,062 --> 00:01:03,472
we have our first hurdle 

16
00:01:03,472 --> 00:01:08,136
Familiar data being Alien. 

17
00:01:08,136 --> 00:01:20,527
Let's delve into the data we've extracted

18
00:01:20,527 --> 00:01:30,166
By honing in on these two tables. 

19
00:01:30,166 --> 00:01:35,847
we'll discover they both have a country column in common.

20
00:01:36,847 --> 00:01:44,043
Upon closer examination, 

21
00:01:44,043 --> 00:01:49,828
the countries that should be well-known in both tables seem strangely unfamiliar. 

22
00:01:49,828 --> 00:01:51,572
But how is this possible? 

23
00:01:51,572 --> 00:01:59,734
It turns out that one country is referred to by a completely different name in the other table.


24
00:02:03,911 --> 00:02:06,603
To swiftly resolve the issue at hand, 

25
00:02:06,603 --> 00:02:10,426
we utilized Excel's vlookup function. 

26
00:02:10,426 --> 00:02:13,916
By designating one table as the standard, 

27
00:02:13,916 --> 00:02:16,768
the other table was examined for any matches.

28
00:02:16,768 --> 00:02:25,575
Any countries that did not have a match were manually edited to align with the country names in the standard table.

29
00:02:25,575 --> 00:02:33,342
A quick re-run of the function would confirm if the cleaning process was complete.

30
00:03:31,927 --> 00:03:34,480
In our ongoing data examination, 

31
00:03:34,480 --> 00:03:37,145
we uncovered a criminal data impurity. 

32
00:03:37,145 --> 00:03:40,882
According to the regulations of Data normalization,

33
00:03:40,882 --> 00:03:42,620
subsection first normal form,

34
00:03:42,620 --> 00:03:48,541
a table ought to contain attributes or columns with atomic values.

35
00:03:54,158 --> 00:03:55,169
In simple terms, 

36
00:03:55,169 --> 00:03:58,164
one value per cell, 

37
00:03:58,164 --> 00:04:02,728
not two not three, 

38
00:04:02,728 --> 00:04:05,744
just one.

39
00:04:05,744 --> 00:04:13,657
Our main contents table breached this regulation.

40
00:04:24,000 --> 00:04:36,349
The resolution for this offense involved employing Python code to split the multi-value cells into separate single-value cells.


41
00:04:47,000 --> 00:04:51,482
At present, our raw data is entirely isolated,

42
00:04:51,482 --> 00:04:57,571
requiring us to devise a solution for establishing a connection between the tables.

43
00:04:57,571 --> 00:05:03,526
Without a means of linking the life expectancy and main contents table,

44
00:05:03,526 --> 00:05:10,456
it becomes impossible to ascertain whether individuals from countries with white meat-based dishes

45
00:05:10,456 --> 00:05:16,962
enjoy a longer life expectancy than those from countries with red meat-based dishes.


46
00:05:20,520 --> 00:05:26,000
The solution closely resembles the one we previously discussed. 

47
00:05:26,000 --> 00:05:29,996
By leveraging Excel's VLOOKUP function, 

48
00:05:29,996 --> 00:05:39,607
we can seamlessly incorporate ID columns into other tables by referring to a reference table. 

49
00:05:39,608 --> 00:05:43,862
Although this method is highly effective for smaller datasets,

50
00:05:43,862 --> 00:05:52,519
it's recommended to explore alternative solutions for larger datasets to ensure efficient processing.


51
00:05:52,519 --> 00:05:57,007
Demonstrating the solution using the “main contents” table;

52
00:05:57,007 --> 00:06:04,696
we start by copying the unique values of the national dish column to a new table called Dishes. 

53
00:06:04,696 --> 00:06:12,593
We then create an ID column in the dishes table and assign an ID value to each national dish.


54
00:06:14,820 --> 00:06:18,893
Setting the dishes table as the reference table, 

55
00:06:18,893 --> 00:06:25,024
we add the ID values to the main contents table.


56
00:07:27,250 --> 00:07:30,162
The updated table bears this appearance. 

57
00:07:30,162 --> 00:07:37,415
It is now safe to drop the National Dish column as the ID column is sufficient.

58
00:07:43,960 --> 00:07:46,398
Tailoring the solution to each table, 

59
00:07:46,398 --> 00:07:52,851
we not only get data that can now be linked but can also communicate a universal message.


60
00:08:03,530 --> 00:08:07,818
The last pair of impurities we stumbled upon were intimately 

61
00:08:07,818 --> 00:08:10,783
intertwined, originating from a shared source. 

62
00:08:15,230 --> 00:08:18,141
Throughout our data mining expedition, 

63
00:08:18,141 --> 00:08:21,668
we amassed data from many websites.

64
00:08:21,668 --> 00:08:28,424
Two of which housed the numerous countries with their respective national cuisines.


65
00:08:56,780 --> 00:09:04,803
These two houses were at loggerheads and their data was laced with the last two impurities.


66
00:09:09,813 --> 00:09:10,709
In a nutshell, 

67
00:09:11,134 --> 00:09:17,618
the data sourced from website 1 stands out as the primary offender.


68
00:09:22,568 --> 00:09:27,331
Both datasets 1 and 2 include countries that overlap. 


69
00:09:40,456 --> 00:09:51,778
However, , it's quite intriguing to observe that certain nations in Dataset 1 have dissimilar national dishes listed in comparison to Dataset 2.


70
00:09:51,778 --> 00:10:00,477
To prevent the project from going down a rabbit hole, 

71
00:10:00,477 --> 00:10:04,852
only one dish was allowed to be designated as the national dish. 

72
00:10:04,852 --> 00:10:15,000
Dataset 1 breached this scope, resulting in certain countries having more than one dish listed as their national dish.


73
00:10:22,470 --> 00:10:24,996
To cleanse out both of these impurities, 

74
00:10:24,996 --> 00:10:37,588
Dataset 2 was chosen as the authoritative dataset, incorporating only the countries from Dataset 1 that were absent in Dataset 2.


75
00:10:44,203 --> 00:10:49,648
For the countries from Dataset 1 that were missing in Dataset 2 

76
00:10:49,648 --> 00:10:53,944
and brought along the burden of scope creep, 

77
00:10:53,944 --> 00:10:58,479
a meticulous process of manual trimming was carried out. 

78
00:10:58,479 --> 00:11:08,336
This involved replacing the multiple dishes with a single dish carefully selected through thorough research and human judgment. 

79
00:11:34,560 --> 00:11:40,208
Now that we've wrapped up the cleaning process and eliminated all impurities from our data, 

80
00:11:40,208 --> 00:11:44,111
it is vital to secure an appropriate storage solution. 

81
00:11:44,111 --> 00:11:50,772
This is crucial to avoid any additional contamination that could jeopardize the precision of our analysis.


82
00:11:55,130 --> 00:12:00,710
And thus, we move forward to the next phase: the data modelling operation.


83
00:12:03,595 --> 00:12:07,573
We are grateful for the time you have invested in this endeavour.

84
00:12:07,573 --> 00:12:11,600
If you need access to the code used for the data cleaning process,

85
00:12:11,617 --> 00:12:14,143
please consult the Jupyter notebooks provided below. 

86
00:12:14,143 --> 00:12:16,291
Thank You!


